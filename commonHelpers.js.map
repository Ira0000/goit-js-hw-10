{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["//add libraries\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport pathSprite from '../img/icons.svg';\n\nlet userSelectedDate;\nlet dateDiff;\n\nconst inputDateField = document.querySelector('input#datetime-picker');\nconst startButton = document.querySelector('.data-start-btn');\nbuttonDisabled();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    let currentDate = new Date();\n\n    if (userSelectedDate.getTime() - currentDate.getTime() > 0) {\n      buttonEnabled();\n    } else {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        messageColor: '#fff',\n        iconColor: '#fff',\n        icon: 'fa-regular fa-circle-xmark',\n        progressBarColor: '#B51B1B',\n        // iconUrl: '${pathSprite}#icon-close-octagon',\n        // iconUrl: '../img/bi_x-octagon.png',\n        // iconUrl: ,\n      });\n      buttonDisabled();\n    }\n  },\n};\n\nlet timer = flatpickr(inputDateField, options);\n\nfunction buttonDisabled() {\n  startButton.disabled = true;\n  inputDateField.classList.add('input-disabled');\n  return;\n}\n\nfunction buttonEnabled() {\n  inputDateField.classList.remove('input-disabled');\n  startButton.disabled = false;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\n  const timerDaysField = document.querySelector('.value[data-days]');\n  const timerHoursField = document.querySelector('.value[data-hours]');\n  const timerMinutesField = document.querySelector('.value[data-minutes]');\n  const timerSecondsField = document.querySelector('.value[data-seconds]');\n\n  timerDaysField.textContent = addLeadingZero(days);\n  timerHoursField.textContent = addLeadingZero(hours);\n  timerMinutesField.textContent = addLeadingZero(minutes);\n  timerSecondsField.textContent = addLeadingZero(seconds);\n}\n\nfunction startTimer() {\n  buttonDisabled();\n  inputDateField.disabled = true;\n\n  let intervalTimer = setInterval(() => {\n    const now = new Date();\n\n    dateDiff = userSelectedDate.getTime() - now.getTime();\n\n    if (dateDiff <= 0) {\n      clearInterval(intervalTimer);\n      console.log('Time is up');\n      inputDateField.disabled = false;\n      iziToast.success({\n        title: 'OK',\n        titleColor: '#fff',\n        message: 'Time is up!',\n        position: 'topRight',\n        backgroundColor: '#59A10D',\n        messageColor: '#fff',\n        iconColor: '#fff',\n        icon: '',\n        iconUrl: '../img/bi_check2-circle.png',\n        progressBarColor: '#326101',\n      });\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(dateDiff);\n      console.log({ days, hours, minutes, seconds });\n      updateTimer(days, hours, minutes, seconds);\n    }\n  }, 1000);\n  //   if (!inputDateField.disabled) {\n\n  //   }\n}\n\nstartButton.addEventListener('click', startTimer);\n"],"names":["userSelectedDate","dateDiff","inputDateField","startButton","buttonDisabled","options","selectedDates","currentDate","buttonEnabled","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimer","timerDaysField","timerHoursField","timerMinutesField","timerSecondsField","startTimer","intervalTimer","now"],"mappings":"+IASA,IAAIA,EACAC,EAEJ,MAAMC,EAAiB,SAAS,cAAc,uBAAuB,EAC/DC,EAAc,SAAS,cAAc,iBAAiB,EAC5DC,IAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrBN,EAAmBM,EAAc,CAAC,EAClC,IAAIC,EAAc,IAAI,KAElBP,EAAiB,QAAS,EAAGO,EAAY,QAAO,EAAK,EACvDC,KAEAC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,aAAc,OACd,UAAW,OACX,KAAM,6BACN,iBAAkB,SAI1B,CAAO,EACDL,IAEH,CACH,EAEYM,EAAUR,EAAgBG,CAAO,EAE7C,SAASD,GAAiB,CACxBD,EAAY,SAAW,GACvBD,EAAe,UAAU,IAAI,gBAAgB,CAE/C,CAEA,SAASM,GAAgB,CACvBN,EAAe,UAAU,OAAO,gBAAgB,EAChDC,EAAY,SAAW,EACzB,CAEA,SAASQ,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAYN,EAAMC,EAAOC,EAASC,EAAS,CAClD,MAAMI,EAAiB,SAAS,cAAc,mBAAmB,EAC3DC,EAAkB,SAAS,cAAc,oBAAoB,EAC7DC,EAAoB,SAAS,cAAc,sBAAsB,EACjEC,EAAoB,SAAS,cAAc,sBAAsB,EAEvEH,EAAe,YAAcH,EAAeJ,CAAI,EAChDQ,EAAgB,YAAcJ,EAAeH,CAAK,EAClDQ,EAAkB,YAAcL,EAAeF,CAAO,EACtDQ,EAAkB,YAAcN,EAAeD,CAAO,CACxD,CAEA,SAASQ,GAAa,CACpBpB,IACAF,EAAe,SAAW,GAE1B,IAAIuB,EAAgB,YAAY,IAAM,CACpC,MAAMC,EAAM,IAAI,KAIhB,GAFAzB,EAAWD,EAAiB,QAAS,EAAG0B,EAAI,QAAO,EAE/CzB,GAAY,EACd,cAAcwB,CAAa,EAC3B,QAAQ,IAAI,YAAY,EACxBvB,EAAe,SAAW,GAC1BO,EAAS,QAAQ,CACf,MAAO,KACP,WAAY,OACZ,QAAS,cACT,SAAU,WACV,gBAAiB,UACjB,aAAc,OACd,UAAW,OACX,KAAM,GACN,QAAS,8BACT,iBAAkB,SAC1B,CAAO,MACI,CACL,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUV,CAAQ,EAC5D,QAAQ,IAAI,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,EAC7CG,EAAYN,EAAMC,EAAOC,EAASC,CAAO,CAC1C,CACF,EAAE,GAAI,CAIT,CAEAb,EAAY,iBAAiB,QAASqB,CAAU"}